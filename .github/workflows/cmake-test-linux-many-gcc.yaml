name: CMake Test (Linux, Many GCC Versions)

on:
  push:
    branches: [ "action/many-gcc" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  test-linux-gcc:
    strategy:
      matrix:
        gcc_ver: [7, 8, 9, 10, 11, 12, 13, 14]
        include:
        - os: ubuntu-20.04
          gcc_ver: 7
        - os: ubuntu-20.04
          gcc_ver: 8
        - os: ubuntu-20.04
          gcc_ver: 9
        - os: ubuntu-20.04
          gcc_ver: 10
        - os: ubuntu-24.04
          gcc_ver: 11
        - os: ubuntu-24.04
          gcc_ver: 12
        - os: ubuntu-24.04
          gcc_ver: 13
        - os: ubuntu-24.04
          gcc_ver: 14
    runs-on: ${{matrix.os}}
    steps:
    - uses: actions/checkout@v4
    - run: git submodule update --init

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-${{matrix.gcc_ver}} g++-${{matrix.gcc_ver}}
        sudo apt-get install -y libspdlog-dev libjpeg-dev libpng-dev libwebp-dev

    - name: Configure CMake
      env:
        CC: gcc-${{matrix.gcc_ver}}
        CXX: g++-${{matrix.gcc_ver}}
      run: >
        cmake -B build
        -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        -DWEBCFACE_TEST=on
        -DWEBCFACE_EXAMPLE=on
        -DWEBCFACE_TEST_TIMEOUT=200
        -DWEBCFACE_SHARED=1
        -DWEBCFACE_FIND_OPENCV=0
        -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/build/install

    - name: Build
      run: cmake --build build -t install

    - name: Test
      env:
        WEBCFACE_TRACE: 1
      working-directory: ${{github.workspace}}/build
      run: ctest --output-on-failure --timeout 20

    - name: Test CMake with installed package
      working-directory: ${{github.workspace}}/.github/test
      env:
        CC: gcc-${{matrix.gcc_ver}}
        CXX: g++-${{matrix.gcc_ver}}
      run: |
        cmake -B build -DCMAKE_PREFIX_PATH=${{github.workspace}}/build/install
        cmake --build build

    - name: Test building with pkg-config
      working-directory: ${{github.workspace}}/.github/test
      env:
        PKG_CONFIG_PATH: ${{github.workspace}}/build/install/lib/pkgconfig
      run: |
        pkg-config --cflags --libs webcface
        g++-${{matrix.gcc_ver}} -std=c++17 test.cc $(pkg-config --cflags --libs webcface)
        gcc-${{matrix.gcc_ver}} -std=c99 test.c $(pkg-config --cflags --libs webcface) -lstdc++

