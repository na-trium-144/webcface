name: CMake Test (Windows MSVC)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: []

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  test-windows-msvc:
    strategy:
      matrix:
        dep: ["source", "submodule", "static"]
        include:
        # - dep: choco
        #   shared_flag: on
        - dep: source
          shared_flag: on
        - dep: submodule
          shared_flag: on
        - dep: static
          shared_flag: off
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v4
    - run: git submodule update --init
      if: matrix.dep == 'submodule'

    # - name: vcpkg build
    #   if: matrix.dep == 'vcpkg'
    #   uses: johnwason/vcpkg-action@v5
    #   id: vcpkg
    #   with:
    #     pkgs: spdlog msgpack eventpp
    #     triplet: x64-windows-release
    #     token: ${{ github.token }}
    # - name: Add vcpkg Path
    #   run: echo "${{github.workspace}}\vcpkg\installed\x64-windows\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    # - name: Uninstall ImageMagick
    #   if: matrix.dep == 'choco'
    #   uses: crazy-max/ghaction-chocolatey@v3
    #   with:
    #     args: uninstall -y imagemagick imagemagick.app
    # - name: Install ImageMagick
    #   if: matrix.dep == 'choco'
    #   uses: crazy-max/ghaction-chocolatey@v3
    #   with:
    #     args: install -y imagemagick -PackageParameters InstallDevelopmentHeaders=true

    # - name: Add imagemagick to path
    #   if: matrix.dep == 'choco'
    #   run: echo "c:\Program Files\ImageMagick-7.1.1-Q16-HDRI" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        
    - name: Restore cached ImageMagick
      # magickpp-build-msvc ではsharedもstaticも同じようにビルドしてる(installは違うが)
      id: cache-im-restore
      uses: actions/cache/restore@v4
      with:
        path: |
          ImageMagick
        key: ${{ runner.os }}-${{ hashFiles('cmake/deps/magickpp-build-msvc.cmake', '.github/workflows/cmake-test-windows-msvc.yml') }}
    - name: Add ImageMagick to Path
      if: steps.cache-im-restore.outputs.cache-hit == 'true'
      run: echo "${{github.workspace}}\ImageMagick" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Configure CMake
      run: |
        ${VS_INST_PATH} = & "${env:ProgramFiles(x86)}/Microsoft Visual Studio/Installer/vswhere.exe" -latest -property installationPath
        Write-Output "  <-> VS Install Path: ${VS_INST_PATH}"
        Import-Module ${VS_INST_PATH}/Common7/Tools/Microsoft.VisualStudio.DevShell.dll
        Enter-VsDevShell -VsInstallPath ${VS_INST_PATH} -SkipAutomaticLocation -DevCmdArguments '-arch=${{matrix.config.arch}} -no_logo'
        cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DWEBCFACE_TEST=on -DWEBCFACE_EXAMPLE=on -DWEBCFACE_TEST_TIMEOUT=1000 -DWEBCFACE_SHARED=${{matrix.shared_flag}} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/build/install
    # ${{ steps.vcpkg.outputs.vcpkg-cmake-config }}

    - name: Build
      run: cmake --build build --config ${{env.BUILD_TYPE}} -t install

    # 1回の実行で1回のみsaveされるようにする
    # restoreとsaveでpathが一致している必要があるらしい
    - name: Copy ImageMagick directory for cache
      if: steps.cache-im-restore.outputs.cache-hit != 'true' && matrix.dep == 'source'
      run: |
        New-Item -Name "ImageMagick" -ItemType Directory -Force
        New-Item -Name "ImageMagick\include" -ItemType Directory -Force
        Move-Item -Path "build\_deps\imagemagick-windows-src\Output\lib" -Destination "ImageMagick\lib"
        Move-Item -Path "build\_deps\imagemagick-windows-src\Output\bin\*" -Include "*.exe" -Destination "ImageMagick"
        Move-Item -Path "build\_deps\imagemagick-windows-src\ImageMagick\MagickCore" -Destination "ImageMagick\include\MagickCore"
        Move-Item -Path "build\_deps\imagemagick-windows-src\ImageMagick\MagickWand" -Destination "ImageMagick\include\MagickWand"
        Move-Item -Path "build\_deps\imagemagick-windows-src\ImageMagick\Magick++\lib\Magick++" -Destination "ImageMagick\include\Magick++"
        Move-Item -Path "build\_deps\imagemagick-windows-src\ImageMagick\Magick++\lib\Magick++.h" -Destination "ImageMagick\include\Magick++"
    - name: Save ImageMagick
      if: steps.cache-im-restore.outputs.cache-hit != 'true' && matrix.dep == 'source'
      id: cache-im-save
      uses: actions/cache/save@v4
      with:
        path: |
          ImageMagick
        key: ${{ steps.cache-im-restore.outputs.cache-primary-key }}

    - name: Test
      env:
        WEBCFACE_TRACE: 1
      working-directory: ${{github.workspace}}/build
      run: ctest --output-on-failure --timeout 100

    - name: Test CMake with installed package
      working-directory: ${{github.workspace}}/.github/test
      run: |
        cmake -B build -DCMAKE_PREFIX_PATH=${{github.workspace}}/build/install
        cmake --build build --config ${{env.BUILD_TYPE}}
