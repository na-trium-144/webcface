name: CMake Test (Windows MSVC)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: []

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  test-windows-msvc:
    strategy:
      matrix:
        dep: ["source", "static"]
        include:
        - dep: source
          shared_flag: on
        - dep: static
          shared_flag: off
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    # - name: vcpkg build
    #   if: matrix.dep == 'vcpkg'
    #   uses: johnwason/vcpkg-action@v5
    #   id: vcpkg
    #   with:
    #     pkgs: spdlog msgpack eventpp
    #     triplet: x64-windows-release
    #     token: ${{ github.token }}
    # - name: Add vcpkg Path
    #   run: echo "${{github.workspace}}\vcpkg\installed\x64-windows\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Configure CMake
      shell: cmd
      run: |
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
        cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DWEBCFACE_TEST=on -DWEBCFACE_EXAMPLE=on -DWEBCFACE_TEST_TIMEOUT=1000 -DWEBCFACE_SHARED=${{matrix.shared_flag}} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/build/install
    # ${{ steps.vcpkg.outputs.vcpkg-cmake-config }}

    - name: Build
      run: cmake --build build

    - name: Test
      env:
        WEBCFACE_TRACE: 1
      working-directory: ${{github.workspace}}/build
      run: ctest --output-on-failure --timeout 100
      
    - name: Test CMake with installed package
      working-directory: ${{github.workspace}}/.github/test
      run: |
        cmake -B build -DCMAKE_PREFIX_PATH=${{github.workspace}}/build/install
        cmake --build build

  include-cp932:
    runs-on: windows-latest
    strategy:
      matrix:
        dep: ["source"]
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure CMake
      shell: cmd
      run: |
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"
        cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DWEBCFACE_DOWNLOAD_WEBUI=off

    - run: Copy-Item build\include\webcface\common\def.h src\include\webcface\common\def.h
    
    - name: Write test.cpp
      run: |
        Set-Content test.cpp "#include<webcface/webcface.h>"
        Add-Content test.cpp "int main(){}"

    - name: Compile with cl
      run: |
        # https://github.com/microsoft/terminal/issues/3821#issuecomment-651506501
        # The setup-msbuild action is not used since it does not set up the path to 'cl'
        # see: https://github.com/microsoft/setup-msbuild/issues/24
        ${VS_INST_PATH} = & "${env:ProgramFiles(x86)}/Microsoft Visual Studio/Installer/vswhere.exe" -latest -property installationPath
        Write-Output "  <-> VS Install Path: ${VS_INST_PATH}"
        Import-Module ${VS_INST_PATH}/Common7/Tools/Microsoft.VisualStudio.DevShell.dll
        Enter-VsDevShell -VsInstallPath ${VS_INST_PATH} -SkipAutomaticLocation -DevCmdArguments '-arch=${{matrix.config.arch}} -no_logo'
        cl /I src\include /I build\_deps\spdlog-src\include /I build\_deps\eventpp-src\include /I c:\tools\opencv\build\include /source-charset:.932 /std:c++20 test.cpp
