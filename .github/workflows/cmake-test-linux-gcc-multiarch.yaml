name: Meson Test (Linux Arm GCC)

on:
  # push:
  #   branches: [ "main" ]
  pull_request:
    branches: []

jobs:
  build-linux:
    # The host should always be linux
    runs-on: ubuntu-22.04-arm
    name: Build on ${{matrix.base}}:${{matrix.distro}} (${{matrix.arch}})

    # Run steps on a matrix of 4 arch/distro combinations
    strategy:
      matrix:
        arch: [arm64, armhf]
        distro: ["24.04"]
        include:
          - arch: arm64
            base: arm64v8/ubuntu
          - arch: armhf
            base: arm32v7/ubuntu
    steps:
      - uses: actions/checkout@v4
      - uses: addnab/docker-run-action@v3
        with:
          image: ${{matrix.base}}:${{matrix.distro}}
          options: >
            -v ${{ github.workspace }}:/workspace
            -e SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt
            -e CC=gcc-14
            -e CXX=g++-14
          run: |
            apt-get update -q -y
            apt-get install -q -y ca-certificates gpg wget lsb-release
            wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc --no-check-certificate | gpg --dearmor - | tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null
            echo "deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/kitware.list >/dev/null
            apt-get update -q -y
            apt-get install -q -y build-essential gcc-14 g++-14 cmake meson file git python3-pip ninja-build zip pkg-config
            cd /workspace
            meson setup build --buildtype=release -Dwrap_mode=forcefallback --prefix=/opt/webcface -Dversion_suffix= -Ddownload_webui=disabled -Dpkgconfig.relocatable=true
            meson compile -C build || meson compile -C build
            DESTDIR=/workspace/dist meson install -C build --skip-subprojects
